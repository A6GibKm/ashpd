(function() {var implementors = {};
implementors["futures_util"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"futures_util/io/struct.AllowStdIo.html\" title=\"struct futures_util::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::io::allow_std::AllowStdIo"]}];
implementors["gio"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"glib/object/trait.IsA.html\" title=\"trait glib::object::IsA\">IsA</a>&lt;<a class=\"struct\" href=\"gio/struct.OutputStream.html\" title=\"struct gio::OutputStream\">OutputStream</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"gio/struct.OutputStreamWrite.html\" title=\"struct gio::OutputStreamWrite\">OutputStreamWrite</a>&lt;T&gt;","synthetic":false,"types":["gio::output_stream::OutputStreamWrite"]}];
implementors["zvariant"] = [{"text":"impl&lt;'ser, 'sig, B, W&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"zvariant/struct.Serializer.html\" title=\"struct zvariant::Serializer\">Serializer</a>&lt;'ser, 'sig, B, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"byteorder/trait.ByteOrder.html\" title=\"trait byteorder::ByteOrder\">ByteOrder</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a>,&nbsp;</span>","synthetic":false,"types":["zvariant::ser::Serializer"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()