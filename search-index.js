var searchIndex = JSON.parse('{\
"libportal":{"doc":"","i":[[3,"RequestProxy","libportal","The Request interface is shared by all portal interfaces.…",null,null],[3,"SessionProxy","","The Session interface is shared by all portal interfaces…",null,null],[4,"ResponseType","","",null,null],[13,"Success","","",0,null],[13,"Cancelled","","",0,null],[13,"Other","","",0,null],[0,"desktop","","Implementation of the various portals under…",null,null],[0,"account","libportal::desktop","Interact with `org.freedesktop.portal.Account` interface.",null,null],[3,"UserInfoOptions","libportal::desktop::account","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",1,null],[12,"reason","","Shown in the dialog to explain why the information is…",1,null],[3,"AccountProxy","","The interface lets sandboxed applications query basic…",null,null],[11,"new","","Creates a new proxy with the default service & path.",2,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",2,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",2,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",2,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",2,[[],["proxy",3]]],[11,"get_user_information","","Gets information about the user.",2,[[["userinfooptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",2,[[],["result",6]]],[11,"introspect","","",2,[[],[["result",6],["string",3]]]],[0,"background","libportal::desktop","Interact with `org.freedesktop.portal.Background` interface.",null,null],[3,"BackgroundOptions","libportal::desktop::background","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",3,null],[12,"reason","","User-visible reason for the request.",3,null],[12,"autostart","","`true` if the app also wants to be started automatically…",3,null],[12,"dbus_activatable","","if `true`, use D-Bus activation for autostart.",3,null],[3,"BackgroundResult","","",null,null],[3,"BackgroundProxy","","The interface lets sandboxed applications request that the…",null,null],[11,"new","","Creates a new proxy with the default service & path.",4,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",4,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",4,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",4,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",4,[[],["proxy",3]]],[11,"request_background","","Requests that the application is allowed to run in the…",4,[[["backgroundoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",4,[[],["result",6]]],[11,"introspect","","",4,[[],[["result",6],["string",3]]]],[0,"camera","libportal::desktop","Interact with `org.freedesktop.portal.Camera` interface.",null,null],[3,"CameraAccessOptions","libportal::desktop::camera","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",5,null],[3,"CameraProxy","","The interface lets sandboxed applications access camera…",null,null],[11,"new","","Creates a new proxy with the default service & path.",6,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",6,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",6,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",6,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",6,[[],["proxy",3]]],[11,"access_camera","","Requests an access to the camera.",6,[[["cameraaccessoptions",3]],[["string",3],["result",6]]]],[11,"open_pipe_wire_remote","","Open a file descriptor to the PipeWire remote where the…",6,[[["hashmap",3],["value",4]],[["result",6],["rawfd",6]]]],[11,"is_camera_present","","A boolean stating whether there is any cameras available.",6,[[],["result",6]]],[11,"version","","version property",6,[[],["result",6]]],[11,"introspect","","",6,[[],[["result",6],["string",3]]]],[0,"device","libportal::desktop","Interact with `org.freedesktop.portal.Device` interface.",null,null],[3,"DeviceAccessOptions","libportal::desktop::device","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",7,null],[3,"DeviceProxy","","The interface lets services ask if an application should…",null,null],[11,"new","","Creates a new proxy with the default service & path.",8,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",8,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",8,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",8,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",8,[[],["proxy",3]]],[11,"access_device","","Asks for access to a device.",8,[[["deviceaccessoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",8,[[],["result",6]]],[11,"introspect","","",8,[[],[["result",6],["string",3]]]],[0,"email","libportal::desktop","Interact with `org.freedesktop.portal.Email` interface.",null,null],[3,"EmailOptions","libportal::desktop::email","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",9,null],[12,"address","","The email address to send to",9,null],[12,"subject","","The subject of the email",9,null],[12,"body","","The body of the email",9,null],[3,"EmailProxy","","The interface lets sandboxed applications request sending…",null,null],[11,"new","","Creates a new proxy with the default service & path.",10,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",10,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",10,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",10,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",10,[[],["proxy",3]]],[11,"compose_email","","Presents a window that lets the user compose an email.",10,[[["emailoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",10,[[],["result",6]]],[11,"introspect","","",10,[[],[["result",6],["string",3]]]],[0,"file_chooser","libportal::desktop","Interact with `org.freedesktop.portal.FileChooser`…",null,null],[3,"OpenFileOptions","libportal::desktop::file_chooser","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",11,null],[12,"accept_label","","Label for the accept button. Mnemonic underlines are…",11,null],[12,"modal","","Whether the dialog should be modal.",11,null],[12,"multiple","","Whether multiple files can be selected or not.",11,null],[12,"directory","","Whether to select for folders instead of files.",11,null],[3,"SaveFileOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",12,null],[12,"accept_label","","Label for the accept button. Mnemonic underlines are…",12,null],[12,"modal","","Whether the dialog should be modal.",12,null],[12,"current_name","","Suggested filename.",12,null],[12,"current_folder","","Suggested folder to save the file in.",12,null],[12,"current_file","","The current file (when saving an existing file).",12,null],[3,"SaveFilesOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",13,null],[12,"accept_label","","Label for the accept button. Mnemonic underlines are…",13,null],[12,"modal","","Whether the dialog should be modal.",13,null],[12,"current_folder","","Suggested folder to save the file in.",13,null],[12,"files","","An array of file names to be saved.",13,null],[3,"FileChooserProxy","","The interface lets sandboxed applications ask the user for…",null,null],[11,"new","","Creates a new proxy with the default service & path.",14,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",14,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",14,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",14,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",14,[[],["proxy",3]]],[11,"open_file","","Asks to open one or more files.",14,[[["openfileoptions",3]],[["string",3],["result",6]]]],[11,"save_file","","Asks for a location to save a file.",14,[[["savefileoptions",3]],[["string",3],["result",6]]]],[11,"save_files","","Asks for a folder as a location to save one or more files.…",14,[[["savefilesoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",14,[[],["result",6]]],[11,"introspect","","",14,[[],[["result",6],["string",3]]]],[0,"game_mode","libportal::desktop","Interact with `org.freedesktop.portal.GameMode` interface.",null,null],[3,"GameModeProxy","libportal::desktop::game_mode","The interface lets sandboxed applications access GameMode…",null,null],[11,"new","","Creates a new proxy with the default service & path.",15,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",15,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",15,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",15,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",15,[[],["proxy",3]]],[11,"query_status","","QueryStatus method",15,[[],["result",6]]],[11,"query_status_by_pidfd","","QueryStatusByPIDFd method",15,[[["rawfd",6]],["result",6]]],[11,"query_status_by_pid","","QueryStatusByPid method",15,[[],["result",6]]],[11,"register_game","","RegisterGame method",15,[[],["result",6]]],[11,"register_game_by_pidfd","","RegisterGameByPIDFd method",15,[[["rawfd",6]],["result",6]]],[11,"register_game_by_pid","","RegisterGameByPid method",15,[[],["result",6]]],[11,"unregister_game","","UnregisterGame method",15,[[],["result",6]]],[11,"unregister_game_by_pidfd","","UnregisterGameByPIDFd method",15,[[["rawfd",6]],["result",6]]],[11,"unregister_game_by_pid","","UnregisterGameByPid method",15,[[],["result",6]]],[11,"version","","version property",15,[[],["result",6]]],[11,"introspect","","",15,[[],[["result",6],["string",3]]]],[0,"inhibit","libportal::desktop","Interact with `org.freedesktop.portal.Inhibit` interface.",null,null],[3,"CreateMonitorOptions","libportal::desktop::inhibit","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",16,null],[12,"session_handle_token","","A string that will be used as the last element of the…",16,null],[3,"InhibitOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",17,null],[12,"reason","","User-visible reason for the inhibition.",17,null],[3,"InhibitProxy","","The interface lets sandboxed applications inhibit the user…",null,null],[11,"new","","Creates a new proxy with the default service & path.",18,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",18,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",18,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",18,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",18,[[],["proxy",3]]],[11,"create_monitor","","Creates a monitoring session. While this session is…",18,[[["createmonitoroptions",3]],[["string",3],["result",6]]]],[11,"inhibit","","Inhibits a session status changes.",18,[[["inhibitoptions",3]],[["string",3],["result",6]]]],[11,"query_end_response","","QueryEndResponse method",18,[[],["result",6]]],[11,"version","","version property",18,[[],["result",6]]],[11,"introspect","","",18,[[],[["result",6],["string",3]]]],[0,"location","libportal::desktop","Interact with `org.freedesktop.portal.Location` interface.",null,null],[3,"LocationAccessOptions","libportal::desktop::location","",null,null],[12,"session_handle_token","","A string that will be used as the last element of the…",19,null],[12,"distance_threshold","","Distance threshold in meters. Default is 0.",19,null],[12,"time_threshold","","Time threshold in seconds. Default is 0.",19,null],[12,"accuracy","","Requested accuracy. Default is EXACT. Values: NONE 0,…",19,null],[3,"LocationStartOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",20,null],[3,"LocationProxy","","The interface lets sandboxed applications query basic…",null,null],[11,"new","","Creates a new proxy with the default service & path.",21,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",21,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",21,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",21,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",21,[[],["proxy",3]]],[11,"create_session","","Create a location session.",21,[[["locationaccessoptions",3]],[["string",3],["result",6]]]],[11,"start","","Start the location session. An application can only…",21,[[["locationstartoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",21,[[],["result",6]]],[11,"introspect","","",21,[[],[["result",6],["string",3]]]],[0,"memory_monitor","libportal::desktop","Interact with `org.freedesktop.portal.MemoryMonitor`…",null,null],[3,"MemoryMonitorProxy","libportal::desktop::memory_monitor","The interface provides information about low system memory…",null,null],[11,"new","","Creates a new proxy with the default service & path.",22,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",22,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",22,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",22,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",22,[[],["proxy",3]]],[11,"version","","version property",22,[[],["result",6]]],[11,"introspect","","",22,[[],[["result",6],["string",3]]]],[0,"network_monitor","libportal::desktop","Interact with `org.freedesktop.portal.NetworkMonitor`…",null,null],[3,"NetworkStatus","libportal::desktop::network_monitor","",null,null],[12,"available","","",23,null],[12,"metered","","",23,null],[12,"connectivity","","",23,null],[3,"NetworkMonitorProxy","","The interface provides network status information to…",null,null],[4,"Connectivity","","Host\'s network activity",null,null],[13,"Local","","The host is not configured with a route to the internet.",24,null],[13,"Limited","","The host is connected to a network, but can\'t reach the…",24,null],[13,"CaptivePortal","","The host is behind a captive portal and cannot reach the…",24,null],[13,"FullNetwork","","The host connected to a network, and can reach the full…",24,null],[13,"Unknown","","",24,null],[11,"new","","Creates a new proxy with the default service & path.",25,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",25,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",25,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",25,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",25,[[],["proxy",3]]],[11,"can_reach","","Returns whether the given hostname is believed to be…",25,[[],["result",6]]],[11,"get_available","","Returns whether the network is considered available. That…",25,[[],["result",6]]],[11,"get_connectivity","","Returns more detailed information about the host\'s network…",25,[[],[["result",6],["connectivity",4]]]],[11,"get_metered","","Returns whether the network is considered metered. That…",25,[[],["result",6]]],[11,"get_status","","Returns the three values all at once.",25,[[],[["result",6],["networkstatus",3]]]],[11,"version","","version property",25,[[],["result",6]]],[11,"introspect","","",25,[[],[["result",6],["string",3]]]],[0,"notification","libportal::desktop","Interact with `org.freedesktop.portal.Notification`…",null,null],[3,"Notification","libportal::desktop::notification","",null,null],[12,"title","","User-visible string to display as the title.",26,null],[12,"body","","User-visible string to display as the body.",26,null],[12,"priority","","The priority for the notification. Supported values: low,…",26,null],[12,"default_action","","Name of an action that is exported by the application.…",26,null],[3,"Button","","",null,null],[12,"label","","User-visible label for the button. Mandatory.",27,null],[12,"action","","Name of an action that is exported by the application. The…",27,null],[3,"NotificationProxy","","The interface lets sandboxed applications send and…",null,null],[11,"new","","Creates a new proxy with the default service & path.",28,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",28,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",28,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",28,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",28,[[],["proxy",3]]],[11,"add_notification","","Sends a notification.",28,[[["notification",3]],["result",6]]],[11,"remove_notification","","Withdraws a notification.",28,[[],["result",6]]],[11,"version","","version property",28,[[],["result",6]]],[11,"introspect","","",28,[[],[["result",6],["string",3]]]],[0,"open_uri","libportal::desktop","Interact with `org.freedesktop.portal.OpenURI` interface.",null,null],[3,"OpenDirOptions","libportal::desktop::open_uri","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",29,null],[3,"OpenFileOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",30,null],[12,"writeable","","Whether to allow the chosen application to write to the…",30,null],[12,"ask","","Whether to ask the user to choose an app. If this is not…",30,null],[3,"OpenURIProxy","","The interface lets sandboxed applications open URIs (e.g.…",null,null],[11,"new","","Creates a new proxy with the default service & path.",31,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",31,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",31,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",31,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",31,[[],["proxy",3]]],[11,"open_directory","","Asks to open the directory containing a local file in the…",31,[[["rawfd",6],["opendiroptions",3]],[["string",3],["result",6]]]],[11,"open_file","","Asks to open a local file.",31,[[["rawfd",6],["openfileoptions",3]],[["string",3],["result",6]]]],[11,"open_uri","","Asks to open a local file.",31,[[["openfileoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",31,[[],["result",6]]],[11,"introspect","","",31,[[],[["result",6],["string",3]]]],[0,"print","libportal::desktop","Interact with `org.freedesktop.portal.Print` interface.",null,null],[3,"PrintSettings","libportal::desktop::print","",null,null],[12,"orientation","","One of landscape, portrait, reverse_landscape or…",32,null],[12,"paper_format","","A paper name according to PWG 5101.1-2002",32,null],[12,"paper_width","","Paper width, in millimeters.",32,null],[12,"paper_height","","Paper height, in millimeters.",32,null],[12,"n_copies","","The number of copies to print.",32,null],[12,"default_source","","The default paper source.",32,null],[12,"quality","","Print quality, one of normal, high, low or draft.",32,null],[12,"resolution","","The resolution, sets both resolution-x & resolution-y",32,null],[12,"use_color","","Whether to use color.",32,null],[12,"duplex","","Duplex printing mode, one of simplex, horizontal or…",32,null],[12,"collate","","Whether to collate copies.",32,null],[12,"reverse","","Whether to reverse the order of printed pages.",32,null],[12,"media_type","","A media type according to PWG 5101.1-2002",32,null],[12,"dither","","The dithering to use, one of fine, none, coarse, lineart,…",32,null],[12,"scale","","The scale in percent",32,null],[12,"print_pages","","What pages to print, one of all, selection, current or…",32,null],[12,"page_ranges","","A list of page ranges, formatted like this: 0-2,4,9-11.",32,null],[12,"page_set","","What pages to print, one of all, even or odd.",32,null],[12,"finishings","","",32,null],[12,"number_up","","The number of pages per sheet.",32,null],[12,"number_up_layout","","One of lrtb, lrbt, rltb, rlbt, tblr, tbrl, btlr, btrl.",32,null],[12,"output_bin","","",32,null],[12,"resolution_x","","The horizontal resolution in dpi.",32,null],[12,"resolution_y","","The vertical resolution in dpi.",32,null],[12,"print_lpi","","The resolution in lpi (lines per inch).",32,null],[12,"output_basename","","Basename to use for print-to-file.",32,null],[12,"output_file_format","","Format to use for print-to-file, one of PDF, PS, SVG.",32,null],[12,"output_uri","","The uri used for print-to file.",32,null],[3,"PrintPageSetup","","",null,null],[12,"ppdname","","the PPD name.",33,null],[12,"name","","The name of the page setup.",33,null],[12,"display_name","","The user-visible name of the page setup.",33,null],[12,"width","","Paper width in millimeters.",33,null],[12,"height","","Paper height in millimeters.",33,null],[12,"margin_top","","Top margin in millimeters.",33,null],[12,"margin_bottom","","Bottom margin in millimeters.",33,null],[12,"margin_right","","Right margin in millimeters.",33,null],[12,"margin_left","","Left margin in millimeters.",33,null],[12,"orientation","","Orientation, one of portrait, landscape, reverse-portrait…",33,null],[3,"PreparePrintOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",34,null],[12,"modal","","Whether to make the dialog modal.",34,null],[3,"PrintOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",35,null],[12,"modal","","Whether to make the dialog modal.",35,null],[12,"token","","Token that was returned by a previous `prepare_print` call.",35,null],[3,"PrintProxy","","The interface lets sandboxed applications print.",null,null],[11,"new","","Creates a new proxy with the default service & path.",36,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",36,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",36,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",36,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",36,[[],["proxy",3]]],[11,"prepare_print","","Presents a print dialog to the user and returns print…",36,[[["printsettings",3],["printpagesetup",3],["prepareprintoptions",3]],[["string",3],["result",6]]]],[11,"print","","Asks to print a file. The file must be passed in the form…",36,[[["rawfd",6],["printoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",36,[[],["result",6]]],[11,"introspect","","",36,[[],[["result",6],["string",3]]]],[0,"remote_desktop","libportal::desktop","Interact with `org.freedesktop.portal.RemoteDesktop`…",null,null],[3,"CreateRemoteOptions","libportal::desktop::remote_desktop","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",37,null],[12,"session_handle_token","","A string that will be used as the last element of the…",37,null],[3,"SelectDevicesOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",38,null],[12,"types","","The device types to request remote controlling of. Default…",38,null],[3,"StartRemoteOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",39,null],[3,"RemoteDesktopProxy","","The interface lets sandboxed applications create remote…",null,null],[11,"new","","Creates a new proxy with the default service & path.",40,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",40,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",40,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",40,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",40,[[],["proxy",3]]],[11,"create_session","","Create a remote desktop session. A remote desktop session…",40,[[["createremoteoptions",3]],[["string",3],["result",6]]]],[11,"notify_keyboard_keycode","","Notify keyboard code May only be called if KEYBOARD access…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_keyboard_keysym","","Notify keyboard symbol May only be called if KEYBOARD…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_pointer_axis","","Notify pointer axis The axis movement from a \'smooth…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_pointer_axis_discrete","","Notify pointer axis discrete May only be called if POINTER…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_pointer_button","","Notify pointer button The pointer button is encoded…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_pointer_motion","","Notify about a new relative pointer motion event. The (dx,…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_pointer_motion_absolute","","Notify about a new absolute pointer motion event. The (x,…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_touch_down","","Notify about a new touch down event. The (x, y) position…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_touch_motion","","Notify about a new touch motion event. The (x, y) position…",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"notify_touch_up","","Notify about a new touch up event.",40,[[["hashmap",3],["value",4]],["result",6]]],[11,"select_devices","","Select input devices to remote control.",40,[[["selectdevicesoptions",3]],[["string",3],["result",6]]]],[11,"start","","Start the remote desktop session.",40,[[["startremoteoptions",3]],[["string",3],["result",6]]]],[11,"available_device_types","","Available source types. 1: Keyboard 2: Pointeur 4:…",40,[[],["result",6]]],[11,"version","","version property",40,[[],["result",6]]],[11,"introspect","","",40,[[],[["result",6],["string",3]]]],[0,"screencast","libportal::desktop","Interact with `org.freedesktop.portal.ScreenCast` interface.",null,null],[3,"CreateSessionOptions","libportal::desktop::screencast","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",41,null],[12,"session_handle_token","","A string that will be used as the last element of the…",41,null],[3,"SelectSourcesOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",42,null],[12,"types","","What types of content to record.",42,null],[12,"multiple","","Whether to allow selecting multiple sources.",42,null],[12,"cursor_mode","","Determines how the cursor will be drawn in the screen cast…",42,null],[3,"StartCastOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",43,null],[3,"ScreenCastProxy","","The interface lets sandboxed applications create screen…",null,null],[11,"new","","Creates a new proxy with the default service & path.",44,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",44,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",44,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",44,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",44,[[],["proxy",3]]],[11,"create_session","","Create a screen cast session.",44,[[["createsessionoptions",3]],[["string",3],["result",6]]]],[11,"open_pipe_wire_remote","","Open a file descriptor to the PipeWire remote where the…",44,[[["hashmap",3],["value",4]],[["result",6],["rawfd",6]]]],[11,"select_sources","","Configure what the screen cast session should record. This…",44,[[["selectsourcesoptions",3]],[["string",3],["result",6]]]],[11,"start","","Start the screen cast session.",44,[[["startcastoptions",3]],[["string",3],["result",6]]]],[11,"available_cursor_modes","","Available cursor mode. Currently defined modes are: 1:…",44,[[],["result",6]]],[11,"available_source_types","","Available source types. Currently defined types are: 1:…",44,[[],["result",6]]],[11,"version","","version property",44,[[],["result",6]]],[11,"introspect","","",44,[[],[["result",6],["string",3]]]],[0,"screenshot","libportal::desktop","Interact with `org.freedesktop.portal.Screenshot` interface.",null,null],[3,"ScreenshotOptions","libportal::desktop::screenshot","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",45,null],[12,"modal","","Whether the dialog should be modal.",45,null],[12,"interactive","","Hint whether the dialog should offer customization before…",45,null],[3,"PickColorOptions","","",null,null],[12,"handle_token","","A string that will be used as the last element of the…",46,null],[3,"ScreenshotProxy","","The interface lets sandboxed applications request a…",null,null],[11,"new","","Creates a new proxy with the default service & path.",47,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",47,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",47,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",47,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",47,[[],["proxy",3]]],[11,"pick_color","","Obtains the color of a single pixel.",47,[[["pickcoloroptions",3]],[["string",3],["result",6]]]],[11,"screenshot","","Takes a screenshot",47,[[["screenshotoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",47,[[],["result",6]]],[11,"introspect","","",47,[[],[["result",6],["string",3]]]],[0,"secret","libportal::desktop","Interact with `org.freedesktop.portal.Secret` interface.",null,null],[3,"ScecretOptions","libportal::desktop::secret","",null,null],[12,"token","","A string returned by a pervious call to `retrieve_secret`",48,null],[3,"SecretProxy","","The interface lets sandboxed applications retrieve a…",null,null],[11,"new","","Creates a new proxy with the default service & path.",49,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",49,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",49,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",49,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",49,[[],["proxy",3]]],[11,"retrieve_secret","","RetrieveSecret method",49,[[["rawfd",6],["scecretoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",49,[[],["result",6]]],[11,"introspect","","",49,[[],[["result",6],["string",3]]]],[0,"settings","libportal::desktop","Interact with `org.freedesktop.portal.Settings` interface.",null,null],[3,"SettingsProxy","libportal::desktop::settings","The interface provides read-only access to a small number…",null,null],[6,"Namespace","","A HashMap of the key: value found on a specific namespace",null,null],[11,"new","","Creates a new proxy with the default service & path.",50,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",50,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",50,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",50,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",50,[[],["proxy",3]]],[11,"read","","Reads a single value. Returns an error on any unknown…",50,[[],[["ownedvalue",3],["result",6]]]],[11,"read_all","","Reads a single value. Returns an error on any unknown…",50,[[],[["hashmap",3],["result",6]]]],[11,"version","","version property",50,[[],["result",6]]],[11,"introspect","","",50,[[],[["result",6],["string",3]]]],[0,"trash","libportal::desktop","Interact with `org.freedesktop.portal.Trash` interface.",null,null],[3,"TrashProxy","libportal::desktop::trash","The interface lets sandboxed applications send files to…",null,null],[11,"new","","Creates a new proxy with the default service & path.",51,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",51,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",51,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",51,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",51,[[],["proxy",3]]],[11,"trash_file","","Sends a file to the trashcan. Applications are allowed to…",51,[[["rawfd",6]],["result",6]]],[11,"version","","version property",51,[[],["result",6]]],[11,"introspect","","",51,[[],[["result",6],["string",3]]]],[0,"wallpaper","libportal::desktop","Interact with `org.freedesktop.portal.Wallpaper` interface.",null,null],[3,"WallpaperOptions","libportal::desktop::wallpaper","",null,null],[12,"show_preview","","Whether to show a preview of the picture Note that the…",52,null],[12,"set_on","","Where to set the wallpaper on",52,null],[3,"WallpaperProxy","","The interface lets sandboxed applications set the user\'s…",null,null],[4,"WallpaperSetOn","","",null,null],[13,"Lockscreen","","",53,null],[13,"Background","","",53,null],[13,"Both","","",53,null],[11,"new","","Creates a new proxy with the default service & path.",54,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",54,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",54,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",54,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",54,[[],["proxy",3]]],[11,"set_wallpaper_file","","Sets the lockscreen, background or both wallapers from a…",54,[[["rawfd",6],["wallpaperoptions",3]],[["string",3],["result",6]]]],[11,"set_wallpaper_uri","","Sets the lockscreen, background or both wallapers from an…",54,[[["wallpaperoptions",3]],[["string",3],["result",6]]]],[11,"version","","version property",54,[[],["result",6]]],[11,"introspect","","",54,[[],[["result",6],["string",3]]]],[0,"documents","libportal","Implementation of the various portals under…",null,null],[0,"document","libportal::documents","Interact with `org.freedesktop.portal.Documents` interface.",null,null],[3,"DocumentsProxy","libportal::documents::document","The interface lets sandboxed applications make files from…",null,null],[6,"Permissions","","A `HashMap` mapping application IDs to the permissions for…",null,null],[11,"new","","Creates a new proxy with the default service & path.",55,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",55,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",55,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",55,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",55,[[],["proxy",3]]],[11,"add","","Adds a file to the document store. The file is passed in…",55,[[["rawfd",6]],[["string",3],["result",6]]]],[11,"add_full","","Adds multiple files to the document store. The files are…",55,[[],["result",6]]],[11,"add_named","","Creates an entry in the document store for writing a new…",55,[[["rawfd",6]],[["string",3],["result",6]]]],[11,"add_named_full","","Adds multiple files to the document store. The files are…",55,[[["rawfd",6]],["result",6]]],[11,"delete","","Removes an entry from the document store. The file itself…",55,[[],["result",6]]],[11,"get_mount_point","","Returns the path at which the document store fuse…",55,[[],[["vec",3],["result",6]]]],[11,"grant_permissions","","GrantPermissions method",55,[[],["result",6]]],[11,"info","","Gets the filesystem path and application permissions for a…",55,[[],["result",6]]],[11,"list","","Lists documents in the document store for an application…",55,[[],[["result",6],["hashmap",3]]]],[11,"lookup","","Looks up the document ID for a file. This call is not…",55,[[],[["string",3],["result",6]]]],[11,"revoke_permissions","","Revokes access permissions for a file in the document…",55,[[],["result",6]]],[11,"version","","version property",55,[[],["result",6]]],[11,"introspect","","",55,[[],[["result",6],["string",3]]]],[0,"file_transfer","libportal::documents","Interact with `org.freedesktop.portal.FileTransfer`…",null,null],[3,"TransferOptions","libportal::documents::file_transfer","",null,null],[12,"writable","","Whether to allow the chosen application to write to the…",56,null],[12,"autostop","","Whether to stop the transfer automatically after the first…",56,null],[3,"FileTransferProxy","","The interface operates as a middle-man between apps when…",null,null],[11,"new","","Creates a new proxy with the default service & path.",57,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",57,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",57,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",57,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",57,[[],["proxy",3]]],[11,"add_files","","Adds files to a session. This method can be called…",57,[[["hashmap",3],["value",4]],["result",6]]],[11,"retrieve_files","","Retrieves files that were previously added to the session…",57,[[["hashmap",3],["value",4]],[["result",6],["vec",3]]]],[11,"start_transfer","","Starts a session for a file transfer. The caller should…",57,[[["transferoptions",3]],[["string",3],["result",6]]]],[11,"stop_transfer","","Ends the transfer. Further calls to `add_files` or…",57,[[],["result",6]]],[11,"version","","version property",57,[[],["result",6]]],[11,"introspect","","",57,[[],[["result",6],["string",3]]]],[0,"flatpak","libportal","Implementation of the various portals under…",null,null],[3,"SpawnOptions","libportal::flatpak","",null,null],[12,"sandbox_expose_fd","","A list of file descriptor for files inside the sandbox…",58,null],[12,"sandbox_expose_fd_ro","","A list of file descriptor for files inside the sandbox…",58,null],[12,"sandbox_flags","","Flags affecting the created sandbox. 1: Share the display…",58,null],[3,"CreateMonitorOptions","","",null,null],[3,"FlatpakProxy","","The interface exposes some interactions with Flatpak on…",null,null],[0,"update_monitor","","",null,null],[3,"UpdateOptions","libportal::flatpak::update_monitor","",null,null],[3,"UpdateMonitorProxy","","The interface exposes some interactions with Flatpak on…",null,null],[11,"new","","Creates a new proxy with the default service & path.",59,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",59,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",59,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",59,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",59,[[],["proxy",3]]],[11,"close","","Ends the update monitoring and cancels any ongoing…",59,[[],["result",6]]],[11,"update","","Asks to install an update of the calling app.",59,[[["updateoptions",3]],["result",6]]],[11,"introspect","","",59,[[],[["result",6],["string",3]]]],[11,"new","libportal::flatpak","Creates a new proxy with the default service & path.",60,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",60,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",60,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",60,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",60,[[],["proxy",3]]],[11,"create_update_monitor","","Creates an update monitor object that will emit signals…",60,[[["createmonitoroptions",3]],[["string",3],["result",6]]]],[11,"spawn","","This methods let you start a new instance of your…",60,[[["rawfd",6],["hashmap",3],["hashmap",3],["spawnoptions",3]],["result",6]]],[11,"spawn_signal","","This methods let you send a Unix signal to a process that…",60,[[],["result",6]]],[11,"supports","","Flags marking what optional features are available. 1:…",60,[[],["result",6]]],[11,"version","","version property",60,[[],["result",6]]],[11,"introspect","","",60,[[],[["result",6],["string",3]]]],[11,"new","libportal","Creates a new proxy with the default service & path.",61,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",61,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",61,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",61,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",61,[[],["proxy",3]]],[11,"close","","Closes the portal request to which this object refers and…",61,[[],["result",6]]],[11,"introspect","","",61,[[],[["result",6],["string",3]]]],[11,"new","","Creates a new proxy with the default service & path.",62,[[["connection",3]],["result",6]]],[11,"new_for","","Creates a new proxy for the given `destination` and `path`.",62,[[["connection",3]],["result",6]]],[11,"new_for_owned","","Same as `new_for` but takes ownership of the passed…",62,[[["string",3],["connection",3]],["result",6]]],[11,"into_inner","","Consumes `self`, returning the underlying `zbus::Proxy`.",62,[[],["proxy",3]]],[11,"inner","","The reference to the underlying `zbus::Proxy`.",62,[[],["proxy",3]]],[11,"close","","Closes the portal session to which this object refers and…",62,[[],["result",6]]],[11,"version","","Emitted when a session is closed. version property",62,[[],["result",6]]],[11,"introspect","","",62,[[],[["result",6],["string",3]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","libportal::desktop::account","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","libportal::desktop::background","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","libportal::desktop::camera","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","libportal::desktop::device","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","libportal::desktop::email","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","libportal::desktop::file_chooser","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","libportal::desktop::game_mode","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","libportal::desktop::inhibit","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","libportal::desktop::location","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","libportal::desktop::memory_monitor","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","libportal::desktop::network_monitor","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","libportal::desktop::notification","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","libportal::desktop::open_uri","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","libportal::desktop::print","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","libportal::desktop::remote_desktop","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","libportal::desktop::screencast","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","libportal::desktop::screenshot","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","libportal::desktop::secret","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","libportal::desktop::settings","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","libportal::desktop::trash","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","libportal::desktop::wallpaper","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","libportal::documents::document","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","libportal::documents::file_transfer","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","libportal::flatpak","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","libportal::flatpak::update_monitor","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"clone","libportal::desktop::network_monitor","",24,[[],["connectivity",4]]],[11,"clone","libportal::desktop::wallpaper","",53,[[],["wallpaperseton",4]]],[11,"default","libportal::desktop::screenshot","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","libportal::desktop::wallpaper","",52,[[]]],[11,"default","libportal::documents::file_transfer","",56,[[]]],[11,"deref","libportal::desktop::account","",2,[[]]],[11,"deref","libportal::desktop::background","",4,[[]]],[11,"deref","libportal::desktop::camera","",6,[[]]],[11,"deref","libportal::desktop::device","",8,[[]]],[11,"deref","libportal::desktop::email","",10,[[]]],[11,"deref","libportal::desktop::file_chooser","",14,[[]]],[11,"deref","libportal::desktop::game_mode","",15,[[]]],[11,"deref","libportal::desktop::inhibit","",18,[[]]],[11,"deref","libportal::desktop::location","",21,[[]]],[11,"deref","libportal::desktop::memory_monitor","",22,[[]]],[11,"deref","libportal::desktop::network_monitor","",25,[[]]],[11,"deref","libportal::desktop::notification","",28,[[]]],[11,"deref","libportal::desktop::open_uri","",31,[[]]],[11,"deref","libportal::desktop::print","",36,[[]]],[11,"deref","libportal::desktop::remote_desktop","",40,[[]]],[11,"deref","libportal::desktop::screencast","",44,[[]]],[11,"deref","libportal::desktop::screenshot","",47,[[]]],[11,"deref","libportal::desktop::secret","",49,[[]]],[11,"deref","libportal::desktop::settings","",50,[[]]],[11,"deref","libportal::desktop::trash","",51,[[]]],[11,"deref","libportal::desktop::wallpaper","",54,[[]]],[11,"deref","libportal::documents::document","",55,[[]]],[11,"deref","libportal::documents::file_transfer","",57,[[]]],[11,"deref","libportal::flatpak","",60,[[]]],[11,"deref","libportal::flatpak::update_monitor","",59,[[]]],[11,"deref","libportal","",61,[[]]],[11,"deref","","",62,[[]]],[11,"fmt","libportal::desktop::account","",1,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::background","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::camera","",5,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::device","",7,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::email","",9,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::file_chooser","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::inhibit","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::location","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::network_monitor","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::notification","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::open_uri","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::print","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::remote_desktop","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::screencast","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::screenshot","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::secret","",48,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::desktop::wallpaper","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::documents::file_transfer","",56,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::flatpak","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","libportal::flatpak::update_monitor","",65,[[["formatter",3]],["result",6]]],[11,"try_from","libportal::desktop::wallpaper","",53,[[["value",4]],["result",4]]],[11,"signature","libportal::desktop::account","",1,[[],["signature",3]]],[11,"signature","libportal::desktop::background","",3,[[],["signature",3]]],[11,"signature","","",63,[[],["signature",3]]],[11,"signature","libportal::desktop::camera","",5,[[],["signature",3]]],[11,"signature","libportal::desktop::device","",7,[[],["signature",3]]],[11,"signature","libportal::desktop::email","",9,[[],["signature",3]]],[11,"signature","libportal::desktop::file_chooser","",11,[[],["signature",3]]],[11,"signature","","",12,[[],["signature",3]]],[11,"signature","","",13,[[],["signature",3]]],[11,"signature","libportal::desktop::inhibit","",16,[[],["signature",3]]],[11,"signature","","",17,[[],["signature",3]]],[11,"signature","libportal::desktop::location","",19,[[],["signature",3]]],[11,"signature","","",20,[[],["signature",3]]],[11,"signature","libportal::desktop::network_monitor","",23,[[],["signature",3]]],[11,"signature","","",24,[[],["signature",3]]],[11,"signature","libportal::desktop::notification","",26,[[],["signature",3]]],[11,"signature","","",27,[[],["signature",3]]],[11,"signature","libportal::desktop::open_uri","",29,[[],["signature",3]]],[11,"signature","","",30,[[],["signature",3]]],[11,"signature","libportal::desktop::print","",32,[[],["signature",3]]],[11,"signature","","",33,[[],["signature",3]]],[11,"signature","","",34,[[],["signature",3]]],[11,"signature","","",35,[[],["signature",3]]],[11,"signature","libportal::desktop::remote_desktop","",37,[[],["signature",3]]],[11,"signature","","",38,[[],["signature",3]]],[11,"signature","","",39,[[],["signature",3]]],[11,"signature","libportal::desktop::screencast","",41,[[],["signature",3]]],[11,"signature","","",42,[[],["signature",3]]],[11,"signature","","",43,[[],["signature",3]]],[11,"signature","libportal::desktop::screenshot","",45,[[],["signature",3]]],[11,"signature","","",46,[[],["signature",3]]],[11,"signature","libportal::desktop::secret","",48,[[],["signature",3]]],[11,"signature","libportal::desktop::wallpaper","",53,[[],["signature",3]]],[11,"signature","","",52,[[],["signature",3]]],[11,"signature","libportal::documents::file_transfer","",56,[[],["signature",3]]],[11,"signature","libportal::flatpak","",58,[[],["signature",3]]],[11,"signature","","",64,[[],["signature",3]]],[11,"signature","libportal::flatpak::update_monitor","",65,[[],["signature",3]]],[11,"deserialize","libportal::desktop::account","",1,[[],["result",4]]],[11,"deserialize","libportal::desktop::background","",3,[[],["result",4]]],[11,"deserialize","","",63,[[],["result",4]]],[11,"deserialize","libportal::desktop::camera","",5,[[],["result",4]]],[11,"deserialize","libportal::desktop::device","",7,[[],["result",4]]],[11,"deserialize","libportal::desktop::email","",9,[[],["result",4]]],[11,"deserialize","libportal::desktop::file_chooser","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","libportal::desktop::inhibit","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","libportal::desktop::location","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","libportal::desktop::network_monitor","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","libportal::desktop::notification","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","libportal::desktop::open_uri","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","libportal::desktop::print","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","libportal::desktop::remote_desktop","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","libportal::desktop::screencast","",41,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","libportal::desktop::screenshot","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","libportal::desktop::secret","",48,[[],["result",4]]],[11,"deserialize","libportal::desktop::wallpaper","",53,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","libportal::documents::file_transfer","",56,[[],["result",4]]],[11,"deserialize","libportal::flatpak","",58,[[],["result",4]]],[11,"deserialize","","",64,[[],["result",4]]],[11,"deserialize","libportal::flatpak::update_monitor","",65,[[],["result",4]]],[11,"serialize","libportal::desktop::account","",1,[[],["result",4]]],[11,"serialize","libportal::desktop::background","",3,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","libportal::desktop::camera","",5,[[],["result",4]]],[11,"serialize","libportal::desktop::device","",7,[[],["result",4]]],[11,"serialize","libportal::desktop::email","",9,[[],["result",4]]],[11,"serialize","libportal::desktop::file_chooser","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","libportal::desktop::inhibit","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","libportal::desktop::location","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","libportal::desktop::network_monitor","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","libportal::desktop::notification","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","libportal::desktop::open_uri","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","libportal::desktop::print","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","libportal::desktop::remote_desktop","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","libportal::desktop::screencast","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","libportal::desktop::screenshot","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","libportal::desktop::secret","",48,[[],["result",4]]],[11,"serialize","libportal::desktop::wallpaper","",53,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","libportal::documents::file_transfer","",56,[[],["result",4]]],[11,"serialize","libportal::flatpak","",58,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","libportal::flatpak::update_monitor","",65,[[],["result",4]]]],"p":[[4,"ResponseType"],[3,"UserInfoOptions"],[3,"AccountProxy"],[3,"BackgroundOptions"],[3,"BackgroundProxy"],[3,"CameraAccessOptions"],[3,"CameraProxy"],[3,"DeviceAccessOptions"],[3,"DeviceProxy"],[3,"EmailOptions"],[3,"EmailProxy"],[3,"OpenFileOptions"],[3,"SaveFileOptions"],[3,"SaveFilesOptions"],[3,"FileChooserProxy"],[3,"GameModeProxy"],[3,"CreateMonitorOptions"],[3,"InhibitOptions"],[3,"InhibitProxy"],[3,"LocationAccessOptions"],[3,"LocationStartOptions"],[3,"LocationProxy"],[3,"MemoryMonitorProxy"],[3,"NetworkStatus"],[4,"Connectivity"],[3,"NetworkMonitorProxy"],[3,"Notification"],[3,"Button"],[3,"NotificationProxy"],[3,"OpenDirOptions"],[3,"OpenFileOptions"],[3,"OpenURIProxy"],[3,"PrintSettings"],[3,"PrintPageSetup"],[3,"PreparePrintOptions"],[3,"PrintOptions"],[3,"PrintProxy"],[3,"CreateRemoteOptions"],[3,"SelectDevicesOptions"],[3,"StartRemoteOptions"],[3,"RemoteDesktopProxy"],[3,"CreateSessionOptions"],[3,"SelectSourcesOptions"],[3,"StartCastOptions"],[3,"ScreenCastProxy"],[3,"ScreenshotOptions"],[3,"PickColorOptions"],[3,"ScreenshotProxy"],[3,"ScecretOptions"],[3,"SecretProxy"],[3,"SettingsProxy"],[3,"TrashProxy"],[3,"WallpaperOptions"],[4,"WallpaperSetOn"],[3,"WallpaperProxy"],[3,"DocumentsProxy"],[3,"TransferOptions"],[3,"FileTransferProxy"],[3,"SpawnOptions"],[3,"UpdateMonitorProxy"],[3,"FlatpakProxy"],[3,"RequestProxy"],[3,"SessionProxy"],[3,"BackgroundResult"],[3,"CreateMonitorOptions"],[3,"UpdateOptions"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);